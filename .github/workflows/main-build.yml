# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build on Main

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Set up Apache Maven Central
        uses: actions/setup-java@v3
        with: # running setup-java again overwrites the settings.xml
          java-version: 11
          distribution: 'adopt'
          cache: 'maven'
          server-username: ${{ secrets.CENTRAL_USERNAME }} # env variable for username in deploy
          server-password: ${{ secrets.CENTRAL_PASSWORD }} # env variable for token in deploy
          gpg-private-key: ${{ secrets.GPG_KEY }} # Value of the GPG private key to import
          gpg-passphrase: ${{ secrets.PASSPHRASE }} # env variable for GPG private key passphrase
      - name: Build with Maven
        with:
          cache: 'maven'
        run: |
          git config --global user.email "refill-rate-limiter@github.com"
          git config --global user.name "Refill Rate Limiter release"
          echo $GPG_KEY | base64 --decode > refill-rate-limiter.gpg
          GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/src/test/resources/credentials.json mvn -s .ci/settings.xml verify sonar:sonar -Dsonar.login=$SONAR_TOKEN
